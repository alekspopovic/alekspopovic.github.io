{"version":3,"sources":["webpack:///./src/components/contentCard.js","webpack:///./src/styles/contentCard.module.css","webpack:///./src/templates/tags.js","webpack:///./src/hooks/usePosts.js","webpack:///./src/styles/blog.module.css"],"names":["ContentCard","props","titleText","tagsHtml","imageHtml","slug","title","subTitle","date","content","image","buttonText","buttonUrl","tags","isInternal","subTitleText","className","cardStyles","subtitle","to","map","tag","key","srcSet","imageContainer","fluid","src","alt","likes","comments","buttonLinkHtml","href","devToArticle","usePosts","filter","article","toLowerCase","contentCard","dangerouslySetInnerHTML","__html","button","module","exports","Tags","pageContext","data","location","totalCount","allMarkdownRemark","posts","edges","tagHeader","pagePath","pathname","blogStyles","blogContent","node","seriesText","frontmatter","series","postSubtitle","postImage","featuredImage","childImageSharp","fields","excerpt","pageQuery","allDevArticles","post","id","positive_reactions_count","comments_count"],"mappings":"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","file":"component---src-templates-tags-js-975d97e580d6a67b620b.js","sourcesContent":["import React from \"react\"\r\nimport Img from \"gatsby-image\"\r\nimport Link from \"gatsby-link\"\r\nimport Impressions from \"./impressions\"\r\nimport cardStyles from \"../styles/contentCard.module.css\"\r\nimport usePosts from \"../hooks/usePosts\"\r\n\r\nfunction ContentCard(props) {\r\n  const {\r\n    slug,\r\n    title,\r\n    subTitle,\r\n    date,\r\n    content,\r\n    image,\r\n    buttonText,\r\n    buttonUrl,\r\n    tags,\r\n    isInternal,\r\n  } = props\r\n\r\n  let subTitleText = subTitle ? (\r\n    <div className={cardStyles.subtitle}>{subTitle}</div>\r\n  ) : null\r\n\r\n  let titleText\r\n\r\n  if (slug) {\r\n    titleText = (\r\n      <Link to={slug}>\r\n        <div>{title}</div>\r\n        {subTitleText}\r\n      </Link>\r\n    )\r\n  } else {\r\n    titleText = (\r\n      <div>\r\n        <div>{title}</div>\r\n        {subTitleText}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let tagsHtml\r\n\r\n  if (tags) {\r\n    tagsHtml = (\r\n      <div className={cardStyles.tags}>\r\n        {tags.map(tag => (\r\n          <span key={tag}>{tag}</span>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let imageHtml\r\n\r\n  if (image.srcSet) {\r\n    imageHtml = <Img className={cardStyles.imageContainer} fluid={image} />\r\n  } else {\r\n    imageHtml = (\r\n      <img\r\n        className={cardStyles.imageContainer}\r\n        src={image}\r\n        alt=\"post thumbnail\"\r\n      />\r\n    )\r\n  }\r\n\r\n  let buttonLinkHtml = isInternal ? (\r\n    <Link to={buttonUrl}>{buttonText}</Link>\r\n  ) : (\r\n    <a href={buttonUrl}>{buttonText}</a>\r\n  )\r\n\r\n  const devToPosts = usePosts()\r\n\r\n  let devToArticle = devToPosts.filter(\r\n    article => article.title.toLowerCase() === title.toLowerCase()\r\n  )[0]\r\n\r\n  let likes, comments\r\n\r\n  if (devToArticle) {\r\n    likes = devToArticle.likes\r\n    comments = devToArticle.comments\r\n  }\r\n\r\n  return (\r\n    <article className={cardStyles.contentCard}>\r\n      {imageHtml}\r\n      <header>\r\n        <h1>{titleText}</h1>\r\n        <div className={cardStyles.date}>{date}</div>\r\n        <Impressions likes={likes} comments={comments} />\r\n      </header>\r\n      <section>\r\n        <p\r\n          dangerouslySetInnerHTML={{\r\n            __html: content,\r\n          }}\r\n        />\r\n        {tagsHtml}\r\n        <div className={cardStyles.button}>{buttonLinkHtml}</div>\r\n      </section>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default ContentCard\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentCard\":\"contentCard-module--contentCard--1TxBF\",\"imageContainer\":\"contentCard-module--imageContainer--3vSfe\",\"subtitle\":\"contentCard-module--subtitle--3bnO9\",\"date\":\"contentCard-module--date--3ZRmV\",\"button\":\"contentCard-module--button--1nWrs\",\"tags\":\"contentCard-module--tags--1A2Fd\"};","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport ContentCard from \"../components/contentCard\"\r\n\r\nimport blogStyles from \"../styles/blog.module.css\"\r\n\r\nconst Tags = ({ pageContext, data, location }) => {\r\n  const { tag } = pageContext\r\n  const totalCount = data.allMarkdownRemark.totalCount\r\n  const posts = data.allMarkdownRemark.edges\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={tagHeader} pagePath={location.pathname} />\r\n      <div className={blogStyles.blogContent}>\r\n        {posts.map(({ node }) => {\r\n          let series = node.frontmatter.series\r\n\r\n          let seriesText =\r\n            series !== null ? (\r\n              <div className={blogStyles.postSubtitle}>\r\n                {node.frontmatter.series}\r\n              </div>\r\n            ) : null\r\n\r\n          let postImage = node.frontmatter.featuredImage.childImageSharp.fluid\r\n\r\n          return (\r\n            <ContentCard\r\n              key={node.fields.slug}\r\n              slug={node.fields.slug}\r\n              title={node.frontmatter.title}\r\n              subTitle={seriesText}\r\n              date={node.frontmatter.date}\r\n              content={node.excerpt}\r\n              image={postImage}\r\n              buttonText=\"Continue reading\"\r\n              buttonUrl={node.fields.slug}\r\n              isInternal={true}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n      {/* <div className={blogStyles.allTags}>\r\n        <Link to=\"/tags\">All tags</Link>\r\n      </div> */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            series\r\n            description\r\n            featuredImage {\r\n              childImageSharp {\r\n                fluid(quality: 100) {\r\n                  ...GatsbyImageSharpFluid_withWebp\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst usePosts = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allDevArticles {\r\n        edges {\r\n          node {\r\n            article {\r\n              title\r\n              positive_reactions_count\r\n              comments_count\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return data.allDevArticles.edges.map(post => ({\r\n    id: post.node.article.id,\r\n    title: post.node.article.title,\r\n    likes: post.node.article.positive_reactions_count,\r\n    comments: post.node.article.comments_count,\r\n  }))\r\n}\r\n\r\nexport default usePosts\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogContent\":\"blog-module--blogContent--1ve2K\",\"allTags\":\"blog-module--allTags--2UvFJ\",\"paginationUrls\":\"blog-module--paginationUrls--1jAPq\",\"tagSummary\":\"blog-module--tagSummary--3dklh\",\"tag\":\"blog-module--tag--2wspA\",\"impressions\":\"blog-module--impressions--1DF3q\",\"postSubtitle\":\"blog-module--postSubtitle--iNo-h\"};"],"sourceRoot":""}